<template:OutputDataTemplateComponent x:Class="_PlcAgent.Visual.Gui.Output.GuiOutputDataTemplate"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:treeListView="clr-namespace:_PlcAgent.Visual.TreeListView"
             xmlns:template="clr-namespace:_PlcAgent.Output.Template"
             mc:Ignorable="d">
    <template:OutputDataTemplateComponent.Resources>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="19"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="15" Height="19" Background="Transparent">
                            <Border Width="11" Height="11" HorizontalAlignment="Left" VerticalAlignment="Center" BorderThickness="1" BorderBrush="#FF7898B5" CornerRadius="0" SnapsToDevicePixels="true">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="White" Offset=".2"/>
                                            <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path x:Name="ExpandPath" Margin="2,2,1,1" Fill="Black" Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <treeListView:LevelToIndentConverter x:Key="LevelToIndentConverter"/>

        <DataTemplate x:Key="CellTemplateName">
            <DockPanel Width="300" VerticalAlignment="Center" HorizontalAlignment="Left" >
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type treeListView:TreeListViewItem}}}"
                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource  AncestorType={x:Type treeListView:TreeListViewItem}}}" ClickMode="Press"/>
                <TextBlock Text="{Binding LastName}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type treeListView:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="CellTemplateType">
            <DockPanel Width="120" VerticalAlignment="Center" HorizontalAlignment="Left" >
                <TextBlock Text="{Binding Type}" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="CellTemplateComponent">
            <DockPanel Width="300" VerticalAlignment="Center" HorizontalAlignment="Left" >
                <TextBlock Text="{Binding ComponentName}" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="CellTemplateInterfaceName">
            <DockPanel Width="80" VerticalAlignment="Center" HorizontalAlignment="Left" >
                <TextBlock Text="{Binding ComponentInterfaceName}" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="CellTemplateInterfaceType">
            <DockPanel Width="80" VerticalAlignment="Center" HorizontalAlignment="Left" >
                <TextBlock Text="{Binding ComponentInterfaceType}" />
            </DockPanel>
        </DataTemplate>

        <GridViewColumnCollection x:Key="Gvcc">
            <GridViewColumn Header="Name" CellTemplate="{StaticResource CellTemplateName}" />
            <GridViewColumn Header="Type" CellTemplate="{StaticResource CellTemplateType}" />
            <GridViewColumn Header="Interface Name" CellTemplate="{StaticResource CellTemplateInterfaceName}" />
            <GridViewColumn Header="Interface Type" CellTemplate="{StaticResource CellTemplateInterfaceType}" />
            <GridViewColumn Header="Component" CellTemplate="{StaticResource CellTemplateComponent}" />
        </GridViewColumnCollection>

        <Style TargetType="{x:Type treeListView:TreeListViewItem}">
            <Setter Property="AlternationCount" Value="2"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type treeListView:TreeListViewItem}">
                        <StackPanel>
                            <Border Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <GridViewRowPresenter x:Name="PART_Header" Content="{TemplateBinding Header}" Columns="{StaticResource Gvcc}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="White"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FFF6F6F6"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter TargetName="Bd" Property="Background" Value="#FFF6F6F6"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                    <Condition Property="ItemsControl.AlternationIndex" Value="1"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="#FFF6F6F6"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                    <Condition Property="ItemsControl.AlternationIndex" Value="0"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type treeListView:TreeListView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type treeListView:TreeListView}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <GridViewHeaderRowPresenter Columns="{StaticResource Gvcc}" DockPanel.Dock="Top"/>
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </template:OutputDataTemplateComponent.Resources>
    
    <Grid Name="GeneralGrid" Background="White">
        <Grid>
            <treeListView:TreeListView x:Name="OutputDataTemplateTreeListView" HorizontalAlignment="Left" Height="400" VerticalAlignment="Top" Width="450" PreviewMouseLeftButtonDown="List_PreviewMouseLeftButtonDown" PreviewMouseMove="List_MouseMove"/>
        </Grid>
        <Grid Name="FooterGrid" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="450">
            <Button Name="ClearButton" Content="Clear" HorizontalAlignment="Right" Margin="0,0,190,0" VerticalAlignment="Bottom" Width="90" Height="22" Click="Clear"/>
            <Button Name="ImportButton" Content="Import" HorizontalAlignment="Right" Margin="0,0,95,0" VerticalAlignment="Bottom" Width="90" Height="22" Click="Import"/>
            <Button Name="ExportButton" Content="Export" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Bottom" Width="90" Height="22" Click="Export"/>
            <Label Name="FileNameLabel" Content="Template.xml" FontSize="10" HorizontalAlignment="Left" Width="450"></Label>
        </Grid>
    </Grid>
</template:OutputDataTemplateComponent>
